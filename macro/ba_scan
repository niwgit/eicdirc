#!/bin/bash

show_help(){
  help="  NAME
    ba_scan - script to run sim/reco for eicdirc

  SYNOPSIS
    ba_scan [OPTION]

  DESCRIPTION 
     -r 
        run type
        0 - run sim + reco
        1 - run lut
        2 - run only reco
        10 - run sim 2 part
     -j
        number of threads 
     -q 
        run -a option on claster 
        one needs to be logged in on hera 
        not implemented yet 
     -e 
        # of events per thread
     -s 
        angle step 
     -v 
        verbose level
        0 - print nothing (default)
        1 - print text messages
        2 - draw plots
     -t 
        test value
     -n 
        silent run"
    echo "$help" 
}

OPTIND=1 
while getopts "h?r:j:qs:e:v:t:n" opt; do
    case "$opt" in
	h|\?)
            show_help
            exit 0
            ;;
	j)  threads=$OPTARG
            ;;
	r)  run=$OPTARG
            ;;
	q)  clastermode=1
            ;;
	s)  astep=$OPTARG
            ;;
	e)  nevents=$OPTARG
            ;;
	v)  verbose=$OPTARG
            ;;
	t)  test1=$OPTARG
            ;;
	n)  silent=1
            ;;
    esac
done
option=${option:-0}
nevents=${nevents:-10}
endEvent=${endEvent:-100000000} 
threads=${threads:-6}
astep=${astep:-2}
run=${run:-0}
verbose=${verbose:-0}
test1=${test1:-0}
silent=${silent:-0}

shift $((OPTIND-1))


tseed=$(($(date +%s%N)/1000000-1393400000000))
printf "====== Run EICDIRC with $tseed seed base ======\n"

simopt="-p 6 -w 0 -g 1 -h 11 -c 4 -l 3 -z 0 -v 0 -zpos 1 -ev 1 -b 1"

if [ ${run} == "1" ]; then
    seq 0 9 | xargs -I{} -n1 -P10 ../build/eicdirc -o ../data/l_b{}.root -s 1 -r {}{} ${simopt} -x "opticalphoton" -p "3.18 eV"  -e 1000000
    sleep 5
    hadd -f ../data/lut.root ../data/l_b*.root
    sleep 5
    root -q -b loadlib.C lutmean.C'("../data/lut")' 
    exit
fi

if [ ${silent} == "1" ]; then
   for i in $(eval echo {30..140..${astep}}); do 
       echo ../build/eicdirc -r $tseed$i -o hdata/h_b$i.root -s 0 -a $i -x "pi+" -e $nevents  $simopt -v $verbose -b 1 
   done
   for i in $(eval echo {30..140..$astep}); do
       echo ../build/eicdirc -i hdata/h_b$i.root -o r_b${tseed}_$i.root -s 2 -t $test1 -v $verbose 
   done
   exit
fi

waitForMe (){
    while : 
    do 
	activth=$(ps aux | grep "[e]icdirc" | grep "h_b" | wc -l)
	printf "\r$statusline [$activth] ---- [$(($(date +%s) - start_time)) s] "
	sleep .1
	if [ "$activth" -lt "$1" ]; then 
	    break  
	fi
    done
}  

if [ ${run} == "10" ]; then
    mkdir -p hdata
    start_time=$(date +%s)
    statusline="GSim"
    for i in $(eval echo {30..140..${astep}}); do 
	../build/eicdirc -r $tseed$i -o hdata/h1_b$i.root -s 0 -a $i -x "pi+" -e $nevents  $simopt -v $verbose -b 1  > /dev/null  &
	waitForMe $threads
    done
    waitForMe "1"
    for i in $(eval echo {30..140..${astep}}); do 
	../build/eicdirc -r $tseed$i -o hdata/h2_b$i.root -s 0 -a $i -x "kaon+" -e $nevents  $simopt -v $verbose -b 1  > /dev/null  &
	waitForMe $threads
    done
    waitForMe "1"

    printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]     \n"
    exit
fi


if [ ${run} != "2" ]; then
    mkdir -p hdata
    start_time=$(date +%s)
    statusline="GSim"
    for i in $(eval echo {30..140..${astep}}); do 
	../build/eicdirc -r $tseed$i -o hdata/h_b$i.root -s 0 -a $i -x "pi+" -e $nevents  $simopt -v $verbose -b 1  > /dev/null  &
	waitForMe $threads
    done
    waitForMe "1"
    printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]     \n"
fi



start_time=$(date +%s)
statusline="Reco"
for i in $(eval echo {30..140..$astep}); do
	../build/eicdirc -i hdata/h_b$i.root -u ../data/lut_avr.root -o r_b${tseed}_$i.root -s 2 -tc $test1 -v $verbose > /dev/null 2> /dev/null &
	waitForMe $threads
done

waitForMe "1"
printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]         \n"
    
sleep 2
hadd r_spr${tseed}.root r_b${tseed}_*.root
rm r_b${tseed}_*.root

